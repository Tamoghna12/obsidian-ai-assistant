var x=Object.defineProperty;var C=Object.getOwnPropertyDescriptor;var k=Object.getOwnPropertyNames;var S=Object.prototype.hasOwnProperty;var N=(m,h)=>{for(var e in h)x(m,e,{get:h[e],enumerable:!0})},q=(m,h,e,t)=>{if(h&&typeof h=="object"||typeof h=="function")for(let s of k(h))!S.call(m,s)&&s!==e&&x(m,s,{get:()=>h[s],enumerable:!(t=C(h,s))||t.enumerable});return m};var O=m=>q(x({},"__esModule",{value:!0}),m);var i=(m,h,e)=>new Promise((t,s)=>{var n=o=>{try{r(e.next(o))}catch(l){s(l)}},a=o=>{try{r(e.throw(o))}catch(l){s(l)}},r=o=>o.done?t(o.value):Promise.resolve(o.value).then(n,a);r((e=e.apply(m,h)).next())});var D={};N(D,{default:()=>P});module.exports=O(D);var M=require("obsidian");var $={ollamaUrl:"http://localhost:11434",ollamaModels:[],openaiApiKey:"",anthropicApiKey:"",geminiApiKey:"",groqApiKey:"",defaultModel:"llama3",defaultModelProvider:"ollama",temperature:.7,maxTokens:2048};var f=require("obsidian");var T=class extends f.PluginSettingTab{constructor(e,t){super(e,t);this.plugin=t}display(){let{containerEl:e}=this;e.empty(),e.createEl("h2",{text:"AI Assistant Settings"}),new f.Setting(e).setName("Ollama URL").setDesc("URL for your local Ollama instance").addText(t=>t.setPlaceholder("http://localhost:11434").setValue(this.plugin.settings.ollamaUrl).onChange(s=>i(this,null,function*(){this.plugin.settings.ollamaUrl=s,yield this.plugin.saveSettings()}))),new f.Setting(e).setName("OpenAI API Key").setDesc("API key for OpenAI models").addText(t=>t.setPlaceholder("sk-...").setValue(this.plugin.settings.openaiApiKey).onChange(s=>i(this,null,function*(){this.plugin.settings.openaiApiKey=s,yield this.plugin.saveSettings()}))),new f.Setting(e).setName("Anthropic API Key").setDesc("API key for Claude models").addText(t=>t.setPlaceholder("sk-ant-...").setValue(this.plugin.settings.anthropicApiKey).onChange(s=>i(this,null,function*(){this.plugin.settings.anthropicApiKey=s,yield this.plugin.saveSettings()}))),new f.Setting(e).setName("Gemini API Key").setDesc("API key for Google Gemini models").addText(t=>t.setPlaceholder("AIza...").setValue(this.plugin.settings.geminiApiKey).onChange(s=>i(this,null,function*(){this.plugin.settings.geminiApiKey=s,yield this.plugin.saveSettings()}))),new f.Setting(e).setName("Groq API Key").setDesc("API key for Groq models").addText(t=>t.setPlaceholder("gsk_...").setValue(this.plugin.settings.groqApiKey).onChange(s=>i(this,null,function*(){this.plugin.settings.groqApiKey=s,yield this.plugin.saveSettings()}))),new f.Setting(e).setName("Default Model").setDesc("Default model to use for conversations").addText(t=>t.setPlaceholder("llama3").setValue(this.plugin.settings.defaultModel).onChange(s=>i(this,null,function*(){this.plugin.settings.defaultModel=s,yield this.plugin.saveSettings()}))),new f.Setting(e).setName("Default Model Provider").setDesc("Default provider for the model (ollama, openai, anthropic, gemini, groq)").addText(t=>t.setPlaceholder("ollama").setValue(this.plugin.settings.defaultModelProvider).onChange(s=>i(this,null,function*(){this.plugin.settings.defaultModelProvider=s,yield this.plugin.saveSettings()}))),new f.Setting(e).setName("Temperature").setDesc("Controls randomness of responses (0.0 to 1.0)").addSlider(t=>t.setLimits(0,1,.1).setValue(this.plugin.settings.temperature).setDynamicTooltip().onChange(s=>i(this,null,function*(){this.plugin.settings.temperature=s,yield this.plugin.saveSettings()}))),new f.Setting(e).setName("Max Tokens").setDesc("Maximum number of tokens to generate").addText(t=>t.setPlaceholder("2048").setValue(this.plugin.settings.maxTokens.toString()).onChange(s=>i(this,null,function*(){let n=parseInt(s);isNaN(n)||(this.plugin.settings.maxTokens=n,yield this.plugin.saveSettings())})))}};var g=require("obsidian");var v="ai-assistant-view",I=class extends g.ItemView{constructor(e,t){super(e);this.messages=[];this.currentModel="";this.currentProvider="";this.isProcessing=!1;this.plugin=t,this.currentModel=t.settings.defaultModel,this.currentProvider=t.settings.defaultModelProvider}getViewType(){return v}getDisplayText(){return"AI Assistant"}onOpen(){return i(this,null,function*(){let e=this.containerEl.children[1];e.empty(),e.addClass("ai-assistant-container");let t=e.createDiv("ai-assistant-chat-container"),s=t.createDiv("ai-assistant-header"),n=s.createDiv("ai-assistant-title");n.createEl("span",{text:"\u{1F916}",cls:"ai-assistant-title-icon"}),n.createEl("span",{text:"AI Assistant"}),s.createEl("button",{text:"Export Chat",cls:"ai-assistant-export-button"}).addEventListener("click",()=>i(this,null,function*(){yield this.exportChatToNote()}));let r=t.createDiv("ai-assistant-model-selector");r.createEl("label",{text:"Select Model"});let o=r.createEl("select");this.populateModelSelector(o);let l=t.createDiv("ai-assistant-actions");this.createActionButtons(l);let c=t.createDiv("ai-assistant-context-actions");this.createContextButtons(c);let u=t.createDiv("ai-assistant-messages");u.id="ai-assistant-messages";let p=t.createDiv("ai-assistant-input-container"),d=p.createEl("textarea",{placeholder:`Type your message here...
(Use Shift+Enter for new line, Enter to send)`,cls:"ai-assistant-input"}),y=p.createEl("button",{text:"\u27A4",cls:"ai-assistant-send-button"});d.addEventListener("input",()=>{d.style.height="auto",d.style.height=Math.min(d.scrollHeight,150)+"px"}),y.addEventListener("click",()=>i(this,null,function*(){d.value.trim()!==""&&!this.isProcessing&&(y.disabled=!0,yield this.sendMessage(d.value,u),d.value="",d.style.height="auto",y.disabled=!1)})),d.addEventListener("keydown",w=>i(this,null,function*(){w.key==="Enter"&&!w.shiftKey&&(w.preventDefault(),d.value.trim()!==""&&!this.isProcessing&&(y.disabled=!0,yield this.sendMessage(d.value,u),d.value="",d.style.height="auto",y.disabled=!1))})),o.addEventListener("change",w=>{let A=w.target.value,[b,E]=A.split(":");this.currentProvider=b,this.currentModel=E})})}onClose(){return i(this,null,function*(){})}createActionButtons(e){e.createEl("button",{text:"Research",cls:"ai-assistant-action-button"}).addEventListener("click",()=>i(this,null,function*(){this.isProcessing||(yield this.performResearch())})),e.createEl("button",{text:"Summarize",cls:"ai-assistant-action-button"}).addEventListener("click",()=>i(this,null,function*(){this.isProcessing||(yield this.summarizeNote())})),e.createEl("button",{text:"Create Content",cls:"ai-assistant-action-button"}).addEventListener("click",()=>i(this,null,function*(){this.isProcessing||(yield this.createContent())})),e.createEl("button",{text:"Generate Tags",cls:"ai-assistant-action-button"}).addEventListener("click",()=>i(this,null,function*(){this.isProcessing||(yield this.generateTags())})),e.createEl("button",{text:"Find Related",cls:"ai-assistant-action-button"}).addEventListener("click",()=>i(this,null,function*(){this.isProcessing||(yield this.findRelatedNotes())}))}createContextButtons(e){e.createEl("button",{text:"Add Current Note to Context",cls:"ai-assistant-context-button"}).addEventListener("click",()=>i(this,null,function*(){this.isProcessing||(yield this.addCurrentNoteToContext())})),e.createEl("button",{text:"Clear Context",cls:"ai-assistant-context-button"}).addEventListener("click",()=>i(this,null,function*(){this.clearContext()}))}populateModelSelector(e){return i(this,null,function*(){e.empty();try{let t=yield(0,g.requestUrl)({url:`${this.plugin.settings.ollamaUrl}/api/tags`,method:"GET",headers:{"Content-Type":"application/json"}});if(t.status===200)t.json.models.forEach(n=>{let a=n.name,r=e.createEl("option",{text:`\u{1F999} Ollama: ${a}`,value:`ollama:${a}`});this.currentProvider==="ollama"&&this.currentModel===a&&(r.selected=!0)});else{let s=e.createEl("option",{text:`\u{1F999} Ollama: ${this.plugin.settings.defaultModel}`,value:`ollama:${this.plugin.settings.defaultModel}`});this.currentProvider==="ollama"&&this.currentModel===this.plugin.settings.defaultModel&&(s.selected=!0)}}catch(t){let s=e.createEl("option",{text:`\u{1F999} Ollama: ${this.plugin.settings.defaultModel}`,value:`ollama:${this.plugin.settings.defaultModel}`});this.currentProvider==="ollama"&&this.currentModel===this.plugin.settings.defaultModel&&(s.selected=!0)}if(this.plugin.settings.openaiApiKey&&["gpt-4","gpt-4-turbo","gpt-3.5-turbo"].forEach(t=>{let s=e.createEl("option",{text:`\u{1F9E0} OpenAI: ${t}`,value:`openai:${t}`});this.currentProvider==="openai"&&this.currentModel===t&&(s.selected=!0)}),this.plugin.settings.anthropicApiKey&&["claude-3-5-sonnet-20240620","claude-3-opus-20240229","claude-3-sonnet-20240229"].forEach(t=>{let s=e.createEl("option",{text:`\u{1F916} Anthropic: ${t}`,value:`anthropic:${t}`});this.currentProvider==="anthropic"&&this.currentModel===t&&(s.selected=!0)}),this.plugin.settings.geminiApiKey&&["gemini-1.5-pro","gemini-1.5-flash"].forEach(t=>{let s=e.createEl("option",{text:`\u2B50 Gemini: ${t}`,value:`gemini:${t}`});this.currentProvider==="gemini"&&this.currentModel===t&&(s.selected=!0)}),this.plugin.settings.groqApiKey){["llama-3.1-8b-instant","llama-3.3-70b-versatile","meta-llama/llama-guard-4-12b","openai/gpt-oss-120b","openai/gpt-oss-20b"].forEach(l=>{let c=e.createEl("option",{text:`\u26A1 Groq: ${l} (Production)`,value:`groq:${l}`});this.currentProvider==="groq"&&this.currentModel===l&&(c.selected=!0)}),["whisper-large-v3","whisper-large-v3-turbo"].forEach(l=>{let c=e.createEl("option",{text:`\u{1F3B5} Groq: ${l} (Audio Transcription)`,value:`groq:${l}`});this.currentProvider==="groq"&&this.currentModel===l&&(c.selected=!0)});let n=document.createElement("optgroup");n.label=" Groq Preview Models (Evaluation Only)",e.appendChild(n),["deepseek-r1-distill-llama-70b","meta-llama/llama-4-maverick-17b-128e-instruct","meta-llama/llama-4-scout-17b-16e-instruct","meta-llama/llama-prompt-guard-2-22m","meta-llama/llama-prompt-guard-2-86m","moonshotai/kimi-k2-instruct","playai-tts","playai-tts-arabic","qwen/qwen3-32b"].forEach(l=>{let c=n.createEl("option",{text:`\u{1F9EA} Groq: ${l} (Preview)`,value:`groq:${l}`});this.currentProvider==="groq"&&this.currentModel===l&&(c.selected=!0)});let r=document.createElement("optgroup");r.label=" Groq Preview Systems",e.appendChild(r),["compound-beta","compound-beta-mini"].forEach(l=>{let c=r.createEl("option",{text:`\u2699\uFE0F Groq: ${l} (System)`,value:`groq:${l}`});this.currentProvider==="groq"&&this.currentModel===l&&(c.selected=!0)})}})}sendMessage(e,t){return i(this,null,function*(){this.addMessageToUI("user",e,t),this.messages.push({role:"user",content:e});let s=this.addTypingIndicator(t);this.isProcessing=!0;try{let n=yield this.getAIResponse(e);s.remove(),this.isProcessing=!1,this.addMessageToUI("assistant",n,t),this.messages.push({role:"assistant",content:n})}catch(n){s.remove(),this.isProcessing=!1;let a=`Error: ${n.message||"Unknown error occurred. Please check your API key and internet connection."}`;this.addMessageToUI("assistant",a,t),this.messages.push({role:"assistant",content:a})}})}performResearch(){return i(this,null,function*(){let e=this.app.workspace.getActiveFile();if(!e){new g.Notice("Please open a note to research.");return}let t=yield this.app.vault.read(e);if(!t.trim()){new g.Notice("The current note is empty.");return}let s=document.getElementById("ai-assistant-messages");if(!s)return;this.addMessageToUI("user",`Researching topic: ${e.basename}`,s);let n=this.addTypingIndicator(s);this.isProcessing=!0;try{let a=`Perform comprehensive research on the following topic:

${t}

Provide detailed findings, key points, and relevant information.`,r=yield this.getAIResponse(a);n.remove(),this.isProcessing=!1,this.addMessageToUI("assistant",r,s),this.messages.push({role:"user",content:a}),this.messages.push({role:"assistant",content:r})}catch(a){n.remove(),this.isProcessing=!1;let r=`Research Error: ${a.message||"Unknown error occurred"}`;this.addMessageToUI("assistant",r,s)}})}summarizeNote(){return i(this,null,function*(){let e=this.app.workspace.getActiveFile();if(!e){new g.Notice("Please open a note to summarize.");return}let t=yield this.app.vault.read(e);if(!t.trim()){new g.Notice("The current note is empty.");return}let s=document.getElementById("ai-assistant-messages");if(!s)return;this.addMessageToUI("user",`Summarizing note: ${e.basename}`,s);let n=this.addTypingIndicator(s);this.isProcessing=!0;try{let a=`Please provide a concise summary of the following note:

${t}`,r=yield this.getAIResponse(a);n.remove(),this.isProcessing=!1,this.addMessageToUI("assistant",r,s),this.messages.push({role:"user",content:a}),this.messages.push({role:"assistant",content:r})}catch(a){n.remove(),this.isProcessing=!1;let r=`Summary Error: ${a.message||"Unknown error occurred"}`;this.addMessageToUI("assistant",r,s)}})}createContent(){return i(this,null,function*(){let e=this.app.workspace.getActiveFile();if(!e){new g.Notice("Please open a note to create content from.");return}let t=yield this.app.vault.read(e);if(!t.trim()){new g.Notice("The current note is empty.");return}let s=document.getElementById("ai-assistant-messages");if(!s)return;this.addMessageToUI("user",`Creating content from note: ${e.basename}`,s);let n=this.addTypingIndicator(s);this.isProcessing=!0;try{let a=`Using the following information, create a well-structured article or blog post:

${t}

Please format the output in Markdown with appropriate headings, bullet points, and paragraphs.`,r=yield this.getAIResponse(a);n.remove(),this.isProcessing=!1,this.addMessageToUI("assistant",r,s),this.messages.push({role:"user",content:a}),this.messages.push({role:"assistant",content:r});let o=s.createEl("button",{text:"Save as New Note",cls:"ai-assistant-save-button"});o.addEventListener("click",()=>i(this,null,function*(){yield this.saveContentAsNote(r,e.basename),o.remove()}))}catch(a){n.remove(),this.isProcessing=!1;let r=`Content Creation Error: ${a.message||"Unknown error occurred"}`;this.addMessageToUI("assistant",r,s)}})}generateTags(){return i(this,null,function*(){let e=this.app.workspace.getActiveFile();if(!e){new g.Notice("Please open a note to generate tags for.");return}let t=yield this.app.vault.read(e);if(!t.trim()){new g.Notice("The current note is empty.");return}let s=document.getElementById("ai-assistant-messages");if(!s)return;this.addMessageToUI("user",`Generating tags for note: ${e.basename}`,s);let n=this.addTypingIndicator(s);this.isProcessing=!0;try{let a=`Generate 5-10 relevant tags for the following note. Return only the tags, separated by commas:

${t}`,r=yield this.getAIResponse(a);n.remove(),this.isProcessing=!1,this.addMessageToUI("assistant",`Suggested tags: ${r}`,s),this.messages.push({role:"user",content:a}),this.messages.push({role:"assistant",content:r});let o=s.createEl("button",{text:"Add Tags to Note",cls:"ai-assistant-save-button"});o.addEventListener("click",()=>i(this,null,function*(){yield this.addTagsToNote(r),o.remove()}))}catch(a){n.remove(),this.isProcessing=!1;let r=`Tags Generation Error: ${a.message||"Unknown error occurred"}`;this.addMessageToUI("assistant",r,s)}})}findRelatedNotes(){return i(this,null,function*(){let e=this.app.workspace.getActiveFile();if(!e){new g.Notice("Please open a note to find related notes for.");return}let t=yield this.app.vault.read(e);if(!t.trim()){new g.Notice("The current note is empty.");return}let s=document.getElementById("ai-assistant-messages");if(!s)return;this.addMessageToUI("user",`Finding related notes for: ${e.basename}`,s);let n=this.addTypingIndicator(s);this.isProcessing=!0;try{let a=this.app.vault.getMarkdownFiles(),r="",o=0;for(let u of a)if(u.path!==e.path&&o<10){let p=yield this.app.vault.read(u);p.trim()&&(r+=`
---
File: ${u.basename}
Content: ${p.substring(0,500)}
`,o++)}let l=`Find related notes in the vault for the following note:

${t}

Available notes in the vault:${r}

Return a list of 3-5 related notes with brief explanations why they are related. Format as a bulleted list.`,c=yield this.getAIResponse(l);n.remove(),this.isProcessing=!1,this.addMessageToUI("assistant",c,s),this.messages.push({role:"user",content:l}),this.messages.push({role:"assistant",content:c})}catch(a){n.remove(),this.isProcessing=!1;let r=`Related Notes Error: ${a.message||"Unknown error occurred"}`;this.addMessageToUI("assistant",r,s)}})}saveContentAsNote(e,t){return i(this,null,function*(){try{let s=`${t}-content-${Date.now()}.md`;yield this.app.vault.create(s,e),new g.Notice(`Content saved as ${s}`)}catch(s){new g.Notice(`Error saving note: ${s.message}`)}})}addCurrentNoteToContext(){return i(this,null,function*(){let e=this.app.workspace.getActiveFile();if(!e){new g.Notice("Please open a note to add to context.");return}let t=yield this.app.vault.read(e);if(!t.trim()){new g.Notice("The current note is empty.");return}let s=`Context from note "${e.basename}":

${t}`;this.messages.push({role:"user",content:s});let n=document.getElementById("ai-assistant-messages");n&&this.addMessageToUI("user",`Added note "${e.basename}" to context`,n),new g.Notice(`Added "${e.basename}" to conversation context.`)})}clearContext(){this.messages=[];let e=document.getElementById("ai-assistant-messages");e&&(e.empty(),this.addMessageToUI("assistant","Context cleared. Starting fresh conversation.",e)),new g.Notice("Conversation context cleared.")}exportChatToNote(){return i(this,null,function*(){if(this.messages.length===0){new g.Notice("No chat history to export.");return}try{let e=`# AI Assistant Chat Export

`;e+=`Exported on: ${new Date().toLocaleString()}

`,e+=`---

`;for(let s of this.messages){let n=s.role==="user"?"You":"AI Assistant",a=new Date().toLocaleTimeString();e+=`## ${n} (${a})

`,e+=`${s.content}

`,e+=`---

`}let t=`AI_Chat_Export_${Date.now()}.md`;yield this.app.vault.create(t,e),new g.Notice(`Chat exported to "${t}"`)}catch(e){console.error("Error exporting chat:",e),new g.Notice(`Error exporting chat: ${e.message}`)}})}addTagsToNote(e){return i(this,null,function*(){let t=this.app.workspace.getActiveFile();if(!t){new g.Notice("No active file to add tags to.");return}try{let s=e.split(",").map(c=>c.trim().replace(/[^a-zA-Z0-9\-_]/g,"")),n=yield this.app.vault.read(t),a=n,r=n.split(`
`),o=!1,l=-1;if(r[0]==="---"){for(let c=1;c<r.length;c++)if(r[c]==="---"){o=!0,l=c;break}}if(o){let c=r.slice(1,l),u=r.slice(l+1).join(`
`),p=-1;for(let d=0;d<c.length;d++)if(c[d].startsWith("tags:")){p=d;break}if(p!==-1){let d=c[p].match(/tags:\s*\[([^\]]*)\]/);if(d){let y=d[1].split(",").map(A=>A.trim().replace(/['"]/g,"")),w=[...new Set([...y,...s])];c[p]=`tags: [${w.map(A=>`"${A}"`).join(", ")}]`}}else c.push(`tags: [${s.map(d=>`"${d}"`).join(", ")}]`);a=`---
${c.join(`
`)}
---
${u}`}else a=`---
${`tags: [${s.map(u=>`"${u}"`).join(", ")}]`}
---
${n}`;yield this.app.vault.modify(t,a),new g.Notice("Tags added to note successfully!")}catch(s){new g.Notice(`Error adding tags to note: ${s.message}`)}})}addMessageToUI(e,t,s){let n=s.createDiv(`ai-assistant-message ai-assistant-${e}-message`),a=n.createDiv("ai-assistant-message-header");e==="user"?a.setText("You"):a.setText("AI Assistant");let r=n.createDiv("ai-assistant-message-content");this.renderMarkdownContent(r,t);let o=new Date().toLocaleTimeString([],{hour:"2-digit",minute:"2-digit"});n.createDiv("ai-assistant-message-timestamp").setText(o),s.scrollTop=s.scrollHeight}renderMarkdownContent(e,t){let s=t.replace(/\*\*(.*?)\*\*/g,"<strong>$1</strong>").replace(/\*(.*?)\*/g,"<em>$1</em>").replace(/~~(.*?)~~/g,"<del>$1</del>").replace(/`(.*?)`/g,"<code>$1</code>").replace(/```([\s\S]*?)```/g,"<pre><code>$1</code></pre>").replace(/`([^`]+)`/g,"<code>$1</code>").replace(/\n/g,"<br>");s=s.replace(/###### (.*?)(<br>|$)/g,"<h6>$1</h6>").replace(/##### (.*?)(<br>|$)/g,"<h5>$1</h5>").replace(/#### (.*?)(<br>|$)/g,"<h4>$1</h4>").replace(/### (.*?)(<br>|$)/g,"<h3>$1</h3>").replace(/## (.*?)(<br>|$)/g,"<h2>$1</h2>").replace(/# (.*?)(<br>|$)/g,"<h1>$1</h1>"),s=s.replace(/(\d+)\. (.*?)(<br>|$)/g,"<ol><li>$2</li></ol>").replace(/\* (.*?)(<br>|$)/g,"<ul><li>$1</li></ul>").replace(/- (.*?)(<br>|$)/g,"<ul><li>$1</li></ul>"),e.innerHTML=s,e.querySelectorAll("a").forEach(a=>{a.setAttr("target","_blank"),a.setAttr("rel","noopener noreferrer")})}addTypingIndicator(e){let t=e.createDiv("ai-assistant-typing-indicator"),s=t.createEl("span",{text:"AI is thinking",cls:"ai-assistant-typing-text"}),n=t.createDiv("ai-assistant-typing-dots");return n.createEl("span",{cls:"ai-assistant-typing-dot"}),n.createEl("span",{cls:"ai-assistant-typing-dot"}),n.createEl("span",{cls:"ai-assistant-typing-dot"}),e.scrollTop=e.scrollHeight,t}getAIResponse(e){return i(this,null,function*(){switch(this.currentProvider){case"ollama":return yield this.getOllamaResponse(e);case"openai":return yield this.getOpenAIResponse(e);case"anthropic":return yield this.getAnthropicResponse(e);case"gemini":return yield this.getGeminiResponse(e);case"groq":return yield this.getGroqResponse(e);default:throw new Error(`Unsupported provider: ${this.currentProvider}`)}})}getOllamaResponse(e){return i(this,null,function*(){var t;try{let s=yield(0,g.requestUrl)({url:`${this.plugin.settings.ollamaUrl}/api/chat`,method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({model:this.currentModel,messages:[...this.messages.map(a=>({role:a.role,content:a.content})),{role:"user",content:e}],options:{temperature:this.plugin.settings.temperature},stream:!1})});if(s.status!==200){if(console.error("Ollama API error:",s.status,s.text),s.status===404)return`Model not found: ${this.currentModel}. Please check if the model is available in Ollama.`;throw new Error(`Ollama API error: ${s.status} - ${s.text}`)}let n=s.json;return n.error?(console.error("Ollama API error:",n.error),`Ollama error: ${n.error}`):((t=n.message)==null?void 0:t.content)||"No response from Ollama"}catch(s){return console.error("Ollama error:",s),s.message.includes("Failed to fetch")||s.message.includes("fetch")?"Connection error: Please check if Ollama is running and accessible.":`Ollama error: ${s.message||"Unknown error occurred. Please check if Ollama is running."}`}})}getOpenAIResponse(e){return i(this,null,function*(){var t,s,n;try{let a=yield(0,g.requestUrl)({url:"https://api.openai.com/v1/chat/completions",method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.plugin.settings.openaiApiKey}`},body:JSON.stringify({model:this.currentModel,messages:[...this.messages.map(o=>({role:o.role,content:o.content})),{role:"user",content:e}],temperature:this.plugin.settings.temperature,max_tokens:this.plugin.settings.maxTokens})});if(a.status!==200)throw new Error(`OpenAI API error: ${a.status} ${a.text}`);return((n=(s=(t=a.json.choices)==null?void 0:t[0])==null?void 0:s.message)==null?void 0:n.content)||"No response from OpenAI"}catch(a){throw new Error(`OpenAI error: ${a.message}`)}})}getAnthropicResponse(e){return i(this,null,function*(){var t,s;try{let n=yield(0,g.requestUrl)({url:"https://api.anthropic.com/v1/messages",method:"POST",headers:{"Content-Type":"application/json","X-API-Key":this.plugin.settings.anthropicApiKey,"anthropic-version":"2023-06-01"},body:JSON.stringify({model:this.currentModel,messages:[...this.messages.map(r=>({role:r.role,content:r.content})),{role:"user",content:e}],temperature:this.plugin.settings.temperature,max_tokens:this.plugin.settings.maxTokens})});if(n.status!==200)throw new Error(`Anthropic API error: ${n.status} ${n.text}`);return((s=(t=n.json.content)==null?void 0:t[0])==null?void 0:s.text)||"No response from Anthropic"}catch(n){throw new Error(`Anthropic error: ${n.message}`)}})}getGeminiResponse(e){return i(this,null,function*(){var t,s,n,a,r;try{let o=yield(0,g.requestUrl)({url:`https://generativelanguage.googleapis.com/v1beta/models/${this.currentModel}:generateContent?key=${this.plugin.settings.geminiApiKey}`,method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({contents:[{parts:[{text:e}]}]})});if(o.status!==200)throw new Error(`Gemini API error: ${o.status} ${o.text}`);let l=o.json;if(l.error)throw new Error(`Gemini API error: ${l.error.message}`);return((r=(a=(n=(s=(t=l.candidates)==null?void 0:t[0])==null?void 0:s.content)==null?void 0:n.parts)==null?void 0:a[0])==null?void 0:r.text)||"No response from Gemini"}catch(o){throw new Error(`Gemini error: ${o.message}`)}})}getGroqResponse(e){return i(this,null,function*(){var t,s,n;try{if(this.currentModel.includes("whisper"))return`The model "${this.currentModel}" is an audio transcription model that requires audio input. This plugin currently only supports text-based models.`;let r=[...this.messages.map(p=>({role:p.role,content:p.content.length>2e3?p.content.substring(0,2e3)+"...":p.content})),{role:"user",content:e.length>2e3?e.substring(0,2e3)+"...":e}],o=Math.min(this.plugin.settings.maxTokens,8192);(this.currentModel.includes("llama-3.3-70b")||this.currentModel.includes("llama-3.1-8b"))&&(o=Math.min(o,8192));let l={model:this.currentModel,messages:r,temperature:this.plugin.settings.temperature,max_tokens:o},c=yield(0,g.requestUrl)({url:"https://api.groq.com/openai/v1/chat/completions",method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.plugin.settings.groqApiKey}`},body:JSON.stringify(l)});if(c.status!==200){if(console.error("Groq API error:",c.status,c.text),c.status===400)return"Bad Request: Please check your request format or model name.";if(c.status===401)return"Authentication error: Please check your Groq API key.";if(c.status===413)return"Request too large: Please reduce the length of your message or context.";if(c.status===429)return"Rate limit exceeded: Please wait before sending another request.";if(c.status===404)return`Model not found: The selected Groq model "${this.currentModel}" may not be available.`;throw new Error(`Groq API error: ${c.status} - ${c.text}`)}let u=c.json;return u.error?(console.error("Groq API error:",u.error),`Groq API error: ${u.error.message||JSON.stringify(u.error)}`):((n=(s=(t=u.choices)==null?void 0:t[0])==null?void 0:s.message)==null?void 0:n.content)||"No response from Groq"}catch(a){return console.error("Groq API error:",a),a.message.includes("401")?"Authentication error: Please check your Groq API key.":a.message.includes("404")?`Model not found: The selected Groq model "${this.currentModel}" may not be available.`:`Groq error: ${a.message||"Unknown error occurred. Please check your API key and internet connection."}`}})}};var P=class extends M.Plugin{onload(){return i(this,null,function*(){console.log("Loading AI Assistant plugin"),yield this.loadSettings(),this.addSettingTab(new T(this.app,this)),this.registerView(v,e=>new I(e,this)),this.addCommand({id:"open-ai-assistant",name:"Open AI Assistant",callback:()=>{this.openAIAssistantView()}}),this.addCommand({id:"summarize-current-note",name:"Summarize Current Note",callback:()=>i(this,null,function*(){let e=this.getActiveAIView();e?yield e.summarizeNote():(yield this.openAIAssistantView(),setTimeout(()=>i(this,null,function*(){let t=this.getActiveAIView();t&&(yield t.summarizeNote())}),500))})}),this.addCommand({id:"research-current-note",name:"Research Current Note",callback:()=>i(this,null,function*(){let e=this.getActiveAIView();e?yield e.performResearch():(yield this.openAIAssistantView(),setTimeout(()=>i(this,null,function*(){let t=this.getActiveAIView();t&&(yield t.performResearch())}),500))})}),this.addCommand({id:"create-content-from-note",name:"Create Content from Note",callback:()=>i(this,null,function*(){let e=this.getActiveAIView();e?yield e.createContent():(yield this.openAIAssistantView(),setTimeout(()=>i(this,null,function*(){let t=this.getActiveAIView();t&&(yield t.createContent())}),500))})}),this.addCommand({id:"generate-tags",name:"Generate Tags for Current Note",callback:()=>i(this,null,function*(){let e=this.getActiveAIView();e?yield e.generateTags():(yield this.openAIAssistantView(),setTimeout(()=>i(this,null,function*(){let t=this.getActiveAIView();t&&(yield t.generateTags())}),500))})}),this.addCommand({id:"find-related-notes",name:"Find Related Notes",callback:()=>i(this,null,function*(){let e=this.getActiveAIView();e?yield e.findRelatedNotes():(yield this.openAIAssistantView(),setTimeout(()=>i(this,null,function*(){let t=this.getActiveAIView();t&&(yield t.findRelatedNotes())}),500))})}),this.addRibbonIcon("message-square","AI Assistant",e=>{this.openAIAssistantView()})})}onunload(){return i(this,null,function*(){console.log("Unloading AI Assistant plugin"),this.app.workspace.detachLeavesOfType(v)})}loadSettings(){return i(this,null,function*(){this.settings=Object.assign({},$,yield this.loadData())})}saveSettings(){return i(this,null,function*(){yield this.saveData(this.settings)})}openAIAssistantView(){return i(this,null,function*(){var t;let e=this.app.workspace.getLeavesOfType(v);if(e.length>0){this.app.workspace.revealLeaf(e[0]);return}(t=this.app.workspace.getRightLeaf(!1))==null||t.setViewState({type:v,active:!0})})}getActiveAIView(){let e=this.app.workspace.getLeavesOfType(v);if(e.length>0){let t=e[0].view;if(t instanceof I)return t}return null}};
