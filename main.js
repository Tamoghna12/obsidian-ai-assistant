
/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

"use strict";var P=Object.defineProperty;var b=Object.getOwnPropertyDescriptor;var M=Object.getOwnPropertyNames;var C=Object.prototype.hasOwnProperty;var k=(u,a)=>{for(var e in a)P(u,e,{get:a[e],enumerable:!0})},S=(u,a,e,t)=>{if(a&&typeof a=="object"||typeof a=="function")for(let s of M(a))!C.call(u,s)&&s!==e&&P(u,s,{get:()=>a[s],enumerable:!(t=b(a,s))||t.enumerable});return u};var N=u=>S(P({},"__esModule",{value:!0}),u);var L={};k(L,{default:()=>I});module.exports=N(L);var $=require("obsidian");var x={ollamaUrl:"http://localhost:11434",ollamaModels:[],openaiApiKey:"",anthropicApiKey:"",geminiApiKey:"",groqApiKey:"",defaultModel:"llama3",defaultModelProvider:"ollama",temperature:.7,maxTokens:2048};var d=require("obsidian"),A=class extends d.PluginSettingTab{constructor(a,e){super(a,e),this.plugin=e}display(){let{containerEl:a}=this;a.empty(),a.createEl("h2",{text:"AI Assistant Settings"}),new d.Setting(a).setName("Ollama URL").setDesc("URL for your local Ollama instance").addText(e=>e.setPlaceholder("http://localhost:11434").setValue(this.plugin.settings.ollamaUrl).onChange(async t=>{this.plugin.settings.ollamaUrl=t,await this.plugin.saveSettings()})),new d.Setting(a).setName("OpenAI API Key").setDesc("API key for OpenAI models").addText(e=>e.setPlaceholder("sk-...").setValue(this.plugin.settings.openaiApiKey).onChange(async t=>{this.plugin.settings.openaiApiKey=t,await this.plugin.saveSettings()}).inputEl.type="password"),new d.Setting(a).setName("Anthropic API Key").setDesc("API key for Claude models").addText(e=>e.setPlaceholder("sk-ant-...").setValue(this.plugin.settings.anthropicApiKey).onChange(async t=>{this.plugin.settings.anthropicApiKey=t,await this.plugin.saveSettings()}).inputEl.type="password"),new d.Setting(a).setName("Gemini API Key").setDesc("API key for Google Gemini models").addText(e=>e.setPlaceholder("AIza...").setValue(this.plugin.settings.geminiApiKey).onChange(async t=>{this.plugin.settings.geminiApiKey=t,await this.plugin.saveSettings()}).inputEl.type="password"),new d.Setting(a).setName("Groq API Key").setDesc("API key for Groq models").addText(e=>e.setPlaceholder("gsk_...").setValue(this.plugin.settings.groqApiKey).onChange(async t=>{this.plugin.settings.groqApiKey=t,await this.plugin.saveSettings()}).inputEl.type="password"),new d.Setting(a).setName("Default Model").setDesc("Default model to use for conversations").addText(e=>e.setPlaceholder("llama3").setValue(this.plugin.settings.defaultModel).onChange(async t=>{this.plugin.settings.defaultModel=t,await this.plugin.saveSettings()})),new d.Setting(a).setName("Default Model Provider").setDesc("Default provider for the model (ollama, openai, anthropic, gemini, groq)").addText(e=>e.setPlaceholder("ollama").setValue(this.plugin.settings.defaultModelProvider).onChange(async t=>{this.plugin.settings.defaultModelProvider=t,await this.plugin.saveSettings()})),new d.Setting(a).setName("Temperature").setDesc("Controls randomness of responses (0.0 to 1.0)").addSlider(e=>e.setLimits(0,1,.1).setValue(this.plugin.settings.temperature).setDynamicTooltip().onChange(async t=>{this.plugin.settings.temperature=t,await this.plugin.saveSettings()})),new d.Setting(a).setName("Max Tokens").setDesc("Maximum number of tokens to generate").addText(e=>e.setPlaceholder("2048").setValue(this.plugin.settings.maxTokens.toString()).onChange(async t=>{let s=parseInt(t);isNaN(s)||(this.plugin.settings.maxTokens=s,await this.plugin.saveSettings())}))}};var o=require("obsidian"),w="ai-assistant-view",v=class extends o.ItemView{constructor(e,t){super(e);this.messages=[];this.currentModel="";this.currentProvider="";this.isProcessing=!1;this.plugin=t,this.currentModel=t.settings.defaultModel,this.currentProvider=t.settings.defaultModelProvider}getViewType(){return w}getDisplayText(){return"AI Assistant"}async onOpen(){let e=this.containerEl.children[1];if(!e)return;e.empty(),e.addClass("ai-assistant-container");let t=e.createDiv("ai-assistant-chat-container"),s=t.createDiv("ai-assistant-header");s.createEl("h2",{text:"AI Assistant",cls:"ai-assistant-title"}),s.createEl("button",{text:"Export Chat",cls:"ai-assistant-export-button"}).addEventListener("click",async()=>{await this.exportChatToNote()});let i=t.createDiv("ai-assistant-model-selector");i.createEl("label",{text:"Select Model:"});let r=i.createEl("select");await this.populateModelSelector(r);let p=t.createDiv("ai-assistant-actions");this.createActionButtons(p);let m=t.createDiv("ai-assistant-context-actions");this.createContextButtons(m);let c=t.createDiv("ai-assistant-messages");c.id="ai-assistant-messages";let h=t.createDiv("ai-assistant-input-container"),l=h.createEl("textarea",{placeholder:`Type your message here...
(Use Shift+Enter for new line, Enter to send)`,cls:"ai-assistant-input"}),g=h.createEl("button",{text:"Send",cls:"ai-assistant-send-button"});l.addEventListener("input",()=>{l.style.height="auto",l.style.height=Math.min(l.scrollHeight,150)+"px"}),g.addEventListener("click",async()=>{l.value.trim()!==""&&!this.isProcessing&&(g.disabled=!0,await this.sendMessage(l.value,c),l.value="",l.style.height="auto",g.disabled=!1)}),l.addEventListener("keydown",async f=>{f.key==="Enter"&&!f.shiftKey&&(f.preventDefault(),l.value.trim()!==""&&!this.isProcessing&&(g.disabled=!0,await this.sendMessage(l.value,c),l.value="",l.style.height="auto",g.disabled=!1))}),r.addEventListener("change",f=>{let T=f.target.value,[y,E]=T.split(":");this.currentProvider=y||"",this.currentModel=E||""})}async onClose(){}createActionButtons(e){e.createEl("button",{text:"Research",cls:"ai-assistant-action-button"}).addEventListener("click",async()=>{this.isProcessing||await this.performResearch()}),e.createEl("button",{text:"Summarize",cls:"ai-assistant-action-button"}).addEventListener("click",async()=>{this.isProcessing||await this.summarizeNote()}),e.createEl("button",{text:"Create Content",cls:"ai-assistant-action-button"}).addEventListener("click",async()=>{this.isProcessing||await this.createContent()}),e.createEl("button",{text:"Generate Tags",cls:"ai-assistant-action-button"}).addEventListener("click",async()=>{this.isProcessing||await this.generateTags()}),e.createEl("button",{text:"Find Related",cls:"ai-assistant-action-button"}).addEventListener("click",async()=>{this.isProcessing||await this.findRelatedNotes()})}createContextButtons(e){e.createEl("button",{text:"Add Current Note to Context",cls:"ai-assistant-context-button"}).addEventListener("click",async()=>{this.isProcessing||await this.addCurrentNoteToContext()}),e.createEl("button",{text:"Clear Context",cls:"ai-assistant-context-button"}).addEventListener("click",async()=>{this.clearContext()})}async populateModelSelector(e){e.empty();try{let t=await(0,o.requestUrl)({url:`${this.plugin.settings.ollamaUrl}/api/tags`,method:"GET",headers:{"Content-Type":"application/json"}});if(t.status===200)t.json.models.forEach(n=>{let i=n.name,r=e.createEl("option",{text:`\u{1F999} Ollama: ${i}`,value:`ollama:${i}`});this.currentProvider==="ollama"&&this.currentModel===i&&(r.selected=!0)});else{let s=e.createEl("option",{text:`\u{1F999} Ollama: ${this.plugin.settings.defaultModel}`,value:`ollama:${this.plugin.settings.defaultModel}`});this.currentProvider==="ollama"&&this.currentModel===this.plugin.settings.defaultModel&&(s.selected=!0)}}catch{let s=e.createEl("option",{text:`\u{1F999} Ollama: ${this.plugin.settings.defaultModel}`,value:`ollama:${this.plugin.settings.defaultModel}`});this.currentProvider==="ollama"&&this.currentModel===this.plugin.settings.defaultModel&&(s.selected=!0)}if(this.plugin.settings.openaiApiKey&&["gpt-4","gpt-4-turbo","gpt-3.5-turbo"].forEach(t=>{let s=e.createEl("option",{text:`\u{1F9E0} OpenAI: ${t}`,value:`openai:${t}`});this.currentProvider==="openai"&&this.currentModel===t&&(s.selected=!0)}),this.plugin.settings.anthropicApiKey&&["claude-3-5-sonnet-20240620","claude-3-opus-20240229","claude-3-sonnet-20240229"].forEach(t=>{let s=e.createEl("option",{text:`\u{1F916} Anthropic: ${t}`,value:`anthropic:${t}`});this.currentProvider==="anthropic"&&this.currentModel===t&&(s.selected=!0)}),this.plugin.settings.geminiApiKey&&["gemini-1.5-pro","gemini-1.5-flash"].forEach(t=>{let s=e.createEl("option",{text:`\u2B50 Gemini: ${t}`,value:`gemini:${t}`});this.currentProvider==="gemini"&&this.currentModel===t&&(s.selected=!0)}),this.plugin.settings.groqApiKey){["llama-3.1-8b-instant","llama-3.3-70b-versatile","meta-llama/llama-guard-4-12b","openai/gpt-oss-120b","openai/gpt-oss-20b","whisper-large-v3","whisper-large-v3-turbo"].forEach(s=>{let n=e.createEl("option",{text:`\u26A1 Groq: ${s} (No internet search)`,value:`groq:${s}`});this.currentProvider==="groq"&&this.currentModel===s&&(n.selected=!0)});let t=document.createElement("optgroup");t.label=" Groq Preview Models (Evaluation Only)",e.appendChild(t),["deepseek-r1-distill-llama-70b","meta-llama/llama-4-maverick-17b-128e-instruct","meta-llama/llama-4-scout-17b-16e-instruct","meta-llama/llama-prompt-guard-2-22m","meta-llama/llama-prompt-guard-2-86m","moonshotai/kimi-k2-instruct","playai-tts","playai-tts-arabic","qwen/qwen3-32b"].forEach(s=>{let n=t.createEl("option",{text:`\u{1F9EA} ${s} (Preview)`,value:`groq:${s}`});this.currentProvider==="groq"&&this.currentModel===s&&(n.selected=!0)})}}async sendMessage(e,t){this.addMessageToUI("user",e,t),this.messages.push({role:"user",content:e});let s=this.addTypingIndicator(t);this.isProcessing=!0;try{let n=await this.getAIResponse(e);s.remove(),this.isProcessing=!1,this.addMessageToUI("assistant",n,t),this.messages.push({role:"assistant",content:n})}catch(n){s.remove(),this.isProcessing=!1;let i=`Error: ${n.message||"Unknown error occurred"}`;this.addMessageToUI("assistant",i,t),this.messages.push({role:"assistant",content:i})}}async getAIResponse(e){switch(this.currentProvider){case"ollama":return await this.getOllamaResponse(e);case"openai":return await this.getOpenAIResponse(e);case"anthropic":return await this.getAnthropicResponse(e);case"gemini":return await this.getGeminiResponse(e);case"groq":return await this.getGroqResponse(e);default:throw new Error(`Unsupported provider: ${this.currentProvider}`)}}async getOllamaResponse(e){try{let t=await(0,o.requestUrl)({url:`${this.plugin.settings.ollamaUrl}/api/chat`,method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({model:this.currentModel,messages:[...this.messages.map(n=>({role:n.role,content:n.content})),{role:"user",content:e}],options:{temperature:this.plugin.settings.temperature},stream:!1})});if(t.status!==200)throw new Error(`Ollama API error: ${t.status} ${t.text}`);return t.json.message?.content||"No response from Ollama"}catch(t){throw new Error(`Ollama error: ${t.message}`)}}async getOpenAIResponse(e){try{let t=await(0,o.requestUrl)({url:"https://api.openai.com/v1/chat/completions",method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.plugin.settings.openaiApiKey}`},body:JSON.stringify({model:this.currentModel,messages:[...this.messages.map(n=>({role:n.role,content:n.content})),{role:"user",content:e}],temperature:this.plugin.settings.temperature,max_tokens:this.plugin.settings.maxTokens})});if(t.status!==200)throw new Error(`OpenAI API error: ${t.status} ${t.text}`);return t.json.choices?.[0]?.message?.content||"No response from OpenAI"}catch(t){throw new Error(`OpenAI error: ${t.message}`)}}async getAnthropicResponse(e){try{let t=await(0,o.requestUrl)({url:"https://api.anthropic.com/v1/messages",method:"POST",headers:{"Content-Type":"application/json","X-API-Key":this.plugin.settings.anthropicApiKey,"anthropic-version":"2023-06-01"},body:JSON.stringify({model:this.currentModel,messages:[...this.messages.map(n=>({role:n.role,content:n.content})),{role:"user",content:e}],temperature:this.plugin.settings.temperature,max_tokens:this.plugin.settings.maxTokens})});if(t.status!==200)throw new Error(`Anthropic API error: ${t.status} ${t.text}`);return t.json.content?.[0]?.text||"No response from Anthropic"}catch(t){throw new Error(`Anthropic error: ${t.message}`)}}async getGeminiResponse(e){try{let t=await(0,o.requestUrl)({url:`https://generativelanguage.googleapis.com/v1beta/models/${this.currentModel}:generateContent?key=${this.plugin.settings.geminiApiKey}`,method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({contents:[{parts:[{text:e}]}]})});if(t.status!==200)throw new Error(`Gemini API error: ${t.status} ${t.text}`);let s=t.json;if(s.error)throw new Error(`Gemini API error: ${s.error.message}`);return s.candidates?.[0]?.content?.parts?.[0]?.text||"No response from Gemini"}catch(t){throw new Error(`Gemini error: ${t.message}`)}}async getGroqResponse(e){try{let t=await(0,o.requestUrl)({url:"https://api.groq.com/openai/v1/chat/completions",method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.plugin.settings.groqApiKey}`},body:JSON.stringify({model:this.currentModel,messages:[...this.messages.map(n=>({role:n.role,content:n.content})),{role:"user",content:e}],temperature:this.plugin.settings.temperature,max_tokens:this.plugin.settings.maxTokens})});if(t.status!==200){if(console.error("Groq API error:",t.status,t.text),t.status===400)return"Bad Request: Please check your request format or model name.";if(t.status===401)return"Authentication error: Please check your Groq API key.";if(t.status===413)return"Request too large: Please reduce the length of your message or context.";if(t.status===429)return"Rate limit exceeded: Please wait before sending another request.";throw new Error(`Groq API error: ${t.status} - ${t.text}`)}let s=t.json;return s.error?(console.error("Groq API error:",s.error),`Groq API error: ${s.error.message||s.error}`):s.choices?.[0]?.message?.content||"No response from Groq"}catch(t){return console.error("Groq API error:",t),t.message.includes("401")?"Authentication error: Please check your Groq API key.":t.message.includes("404")?`Model not found: The selected Groq model "${this.currentModel}" may not be available.`:`Groq error: ${t.message||"Unknown error occurred. Please check your API key and internet connection."}`}}addMessageToUI(e,t,s){let n=s.createDiv(`ai-assistant-message ai-assistant-${e}-message`),i=n.createDiv("ai-assistant-message-header");e==="user"?i.setText("You"):i.setText("AI Assistant");let r=n.createDiv("ai-assistant-message-content");this.renderMarkdownContent(r,t);let p=new Date().toLocaleTimeString([],{hour:"2-digit",minute:"2-digit"});n.createDiv("ai-assistant-message-timestamp").setText(p),s.scrollTop=s.scrollHeight}renderMarkdownContent(e,t){let s=t.replace(/\*\*(.*?)\*\*/g,"<strong>$1</strong>").replace(/\*(.*?)\*/g,"<em>$1</em>").replace(/~~(.*?)~~/g,"<del>$1</del>").replace(/`(.*?)`/g,"<code>$1</code>").replace(/```([\\s\\S]*?)```/g,"<pre><code>$1</code></pre>").replace(/`([^`]+)`/g,"<code>$1</code>").replace(/\n/g,"<br>");s=s.replace(/###### (.*?)(<br>|$)/g,"<h6>$1</h6>").replace(/##### (.*?)(<br>|$)/g,"<h5>$1</h5>").replace(/#### (.*?)(<br>|$)/g,"<h4>$1</h4>").replace(/### (.*?)(<br>|$)/g,"<h3>$1</h3>").replace(/## (.*?)(<br>|$)/g,"<h2>$1</h2>").replace(/# (.*?)(<br>|$)/g,"<h1>$1</h1>"),s=s.replace(/(\d+)\. (.*?)(<br>|$)/g,"<ol><li>$2</li></ol>").replace(/\* (.*?)(<br>|$)/g,"<ul><li>$1</li></ul>").replace(/- (.*?)(<br>|$)/g,"<ul><li>$1</li></ul>"),e.innerHTML=s,e.querySelectorAll("a").forEach(i=>{i.setAttr("target","_blank"),i.setAttr("rel","noopener noreferrer")})}addTypingIndicator(e){let t=e.createDiv("ai-assistant-typing-indicator");t.createEl("span",{text:"AI is thinking",cls:"ai-assistant-typing-text"});let s=t.createDiv("ai-assistant-typing-dots");return s.createEl("span",{cls:"ai-assistant-typing-dot"}),s.createEl("span",{cls:"ai-assistant-typing-dot"}),s.createEl("span",{cls:"ai-assistant-typing-dot"}),e.scrollTop=e.scrollHeight,t}async performResearch(){let e=this.app.workspace.getActiveFile();if(!e){new o.Notice("Please open a note to research.");return}let t=await this.app.vault.read(e);if(!t.trim()){new o.Notice("The current note is empty.");return}let s=document.getElementById("ai-assistant-messages");if(!s)return;this.addMessageToUI("user",`Researching topic: ${e.basename}`,s);let n=this.addTypingIndicator(s);this.isProcessing=!0;try{let i=`Perform comprehensive research on the following topic:

${t}

Provide detailed findings, key points, and relevant information.`,r=await this.getAIResponse(i);n.remove(),this.isProcessing=!1,this.addMessageToUI("assistant",r,s),this.messages.push({role:"user",content:i}),this.messages.push({role:"assistant",content:r})}catch(i){n.remove(),this.isProcessing=!1;let r=`Research Error: ${i.message||"Unknown error occurred"}`;this.addMessageToUI("assistant",r,s)}}async summarizeNote(){let e=this.app.workspace.getActiveFile();if(!e){new o.Notice("Please open a note to summarize.");return}let t=await this.app.vault.read(e);if(!t.trim()){new o.Notice("The current note is empty.");return}let s=document.getElementById("ai-assistant-messages");if(!s)return;this.addMessageToUI("user",`Summarizing note: ${e.basename}`,s);let n=this.addTypingIndicator(s);this.isProcessing=!0;try{let i=`Please provide a concise summary of the following note:

${t}`,r=await this.getAIResponse(i);n.remove(),this.isProcessing=!1,this.addMessageToUI("assistant",r,s),this.messages.push({role:"user",content:i}),this.messages.push({role:"assistant",content:r})}catch(i){n.remove(),this.isProcessing=!1;let r=`Summary Error: ${i.message||"Unknown error occurred"}`;this.addMessageToUI("assistant",r,s)}}async createContent(){let e=this.app.workspace.getActiveFile();if(!e){new o.Notice("Please open a note to create content from.");return}let t=await this.app.vault.read(e);if(!t.trim()){new o.Notice("The current note is empty.");return}let s=document.getElementById("ai-assistant-messages");if(!s)return;this.addMessageToUI("user",`Creating content from note: ${e.basename}`,s);let n=this.addTypingIndicator(s);this.isProcessing=!0;try{let i=`Using the following information, create a well-structured article or blog post:

${t}

Please format the output in Markdown with appropriate headings, bullet points, and paragraphs.`,r=await this.getAIResponse(i);n.remove(),this.isProcessing=!1,this.addMessageToUI("assistant",r,s),this.messages.push({role:"user",content:i}),this.messages.push({role:"assistant",content:r});let p=s.createEl("button",{text:"Save as New Note",cls:"ai-assistant-save-button"});p.addEventListener("click",async()=>{await this.saveContentAsNote(r,e.basename),p.remove()})}catch(i){n.remove(),this.isProcessing=!1;let r=`Content Creation Error: ${i.message||"Unknown error occurred"}`;this.addMessageToUI("assistant",r,s)}}async generateTags(){let e=this.app.workspace.getActiveFile();if(!e){new o.Notice("Please open a note to generate tags for.");return}let t=await this.app.vault.read(e);if(!t.trim()){new o.Notice("The current note is empty.");return}let s=document.getElementById("ai-assistant-messages");if(!s)return;this.addMessageToUI("user",`Generating tags for note: ${e.basename}`,s);let n=this.addTypingIndicator(s);this.isProcessing=!0;try{let i=`Generate 5-10 relevant tags for the following note. Return only the tags, separated by commas:

${t}`,r=await this.getAIResponse(i);n.remove(),this.isProcessing=!1,this.addMessageToUI("assistant",`Suggested tags: ${r}`,s),this.messages.push({role:"user",content:i}),this.messages.push({role:"assistant",content:r});let p=s.createEl("button",{text:"Add Tags to Note",cls:"ai-assistant-save-button"});p.addEventListener("click",async()=>{await this.addTagsToNote(r),p.remove()})}catch(i){n.remove(),this.isProcessing=!1;let r=`Tags Generation Error: ${i.message||"Unknown error occurred"}`;this.addMessageToUI("assistant",r,s)}}async findRelatedNotes(){let e=this.app.workspace.getActiveFile();if(!e){new o.Notice("Please open a note to find related notes for.");return}let t=await this.app.vault.read(e);if(!t.trim()){new o.Notice("The current note is empty.");return}let s=document.getElementById("ai-assistant-messages");if(!s)return;this.addMessageToUI("user",`Finding related notes for: ${e.basename}`,s);let n=this.addTypingIndicator(s);this.isProcessing=!0;try{let i=this.app.vault.getMarkdownFiles(),r="",p=0;for(let h of i)if(h.path!==e.path&&p<10){let l=await this.app.vault.read(h);l.trim()&&(r+=`
---
File: ${h.basename}
Content: ${l.substring(0,500)}
`,p++)}let m=`Find related notes in the vault for the following note:

${t}

Available notes in the vault:${r}

Return a list of 3-5 related notes with brief explanations why they are related. Format as a bulleted list.`,c=await this.getAIResponse(m);n.remove(),this.isProcessing=!1,this.addMessageToUI("assistant",c,s),this.messages.push({role:"user",content:m}),this.messages.push({role:"assistant",content:c})}catch(i){n.remove(),this.isProcessing=!1;let r=`Related Notes Error: ${i.message||"Unknown error occurred"}`;this.addMessageToUI("assistant",r,s)}}async saveContentAsNote(e,t){try{let s=`${t}-content-${Date.now()}.md`;await this.app.vault.create(s,e),new o.Notice(`Content saved as ${s}`)}catch(s){new o.Notice(`Error saving note: ${s.message}`)}}async addCurrentNoteToContext(){let e=this.app.workspace.getActiveFile();if(!e){new o.Notice("Please open a note to add to context.");return}let t=await this.app.vault.read(e);if(!t.trim()){new o.Notice("The current note is empty.");return}let s=`Context from note "${e.basename}":

${t}`;this.messages.push({role:"user",content:s});let n=document.getElementById("ai-assistant-messages");n&&this.addMessageToUI("user",`Added note "${e.basename}" to context`,n),new o.Notice(`Added "${e.basename}" to conversation context.`)}clearContext(){this.messages=[];let e=document.getElementById("ai-assistant-messages");e&&(e.empty(),this.addMessageToUI("assistant","Context cleared. Starting fresh conversation.",e)),new o.Notice("Conversation context cleared.")}async exportChatToNote(){if(this.messages.length===0){new o.Notice("No chat history to export.");return}try{let e=`# AI Assistant Chat Export

`;e+=`Exported on: ${new Date().toLocaleString()}

`,e+=`---

`;for(let s of this.messages){let n=s.role==="user"?"You":"AI Assistant",i=new Date().toLocaleTimeString();e+=`## ${n} (${i})

`,e+=`${s.content}

`,e+=`---

`}let t=`AI_Chat_Export_${Date.now()}.md`;await this.app.vault.create(t,e),new o.Notice(`Chat exported to "${t}"`)}catch(e){console.error("Error exporting chat:",e),new o.Notice(`Error exporting chat: ${e.message}`)}}async addTagsToNote(e){let t=this.app.workspace.getActiveFile();if(!t){new o.Notice("No active file to add tags to.");return}try{let s=e.split(",").map(c=>c.trim().replace(/[^a-zA-Z0-9\-_]/g,"")),n=await this.app.vault.read(t),i=n,r=n.split(`
`),p=!1,m=-1;if(r[0]==="---"){for(let c=1;c<r.length;c++)if(r[c]==="---"){p=!0,m=c;break}}if(p){let c=r.slice(1,m),h=r.slice(m+1).join(`
`),l=-1;for(let g=0;g<c.length;g++)if(c[g]?.startsWith("tags:")){l=g;break}if(l!==-1){let g=c[l]?.match(/tags:\s*\[([^\]]*)\]/);if(g&&g[1]){let f=g[1].split(",").map(y=>y.trim().replace(/['"]/g,"")),T=[...new Set([...f,...s])];c[l]=`tags: [${T.map(y=>`"${y}"`).join(", ")}]`}}else c.push(`tags: [${s.map(g=>`"${g}"`).join(", ")}]`);i=`---
${c.join(`
`)}
---
${h}`}else i=`---
${`tags: [${s.map(h=>`"${h}"`).join(", ")}]`}
---
${n}`;await this.app.vault.modify(t,i),new o.Notice("Tags added to note successfully!")}catch(s){new o.Notice(`Error adding tags to note: ${s.message}`)}}};var I=class extends $.Plugin{async onload(){console.log("Loading AI Assistant plugin"),await this.loadSettings(),this.addSettingTab(new A(this.app,this)),this.registerView(w,a=>new v(a,this)),this.addCommand({id:"open-ai-assistant",name:"Open AI Assistant",callback:()=>{this.openAIAssistantView()}}),this.addCommand({id:"summarize-current-note",name:"Summarize Current Note",callback:async()=>{let a=this.getActiveAIView();a?await a.summarizeNote():(await this.openAIAssistantView(),setTimeout(async()=>{let e=this.getActiveAIView();e&&await e.summarizeNote()},500))}}),this.addCommand({id:"research-current-note",name:"Research Current Note",callback:async()=>{let a=this.getActiveAIView();a?await a.performResearch():(await this.openAIAssistantView(),setTimeout(async()=>{let e=this.getActiveAIView();e&&await e.performResearch()},500))}}),this.addCommand({id:"create-content-from-note",name:"Create Content from Note",callback:async()=>{let a=this.getActiveAIView();a?await a.createContent():(await this.openAIAssistantView(),setTimeout(async()=>{let e=this.getActiveAIView();e&&await e.createContent()},500))}}),this.addCommand({id:"generate-tags",name:"Generate Tags for Current Note",callback:async()=>{let a=this.getActiveAIView();a?await a.generateTags():(await this.openAIAssistantView(),setTimeout(async()=>{let e=this.getActiveAIView();e&&await e.generateTags()},500))}}),this.addCommand({id:"find-related-notes",name:"Find Related Notes",callback:async()=>{let a=this.getActiveAIView();a?await a.findRelatedNotes():(await this.openAIAssistantView(),setTimeout(async()=>{let e=this.getActiveAIView();e&&await e.findRelatedNotes()},500))}}),this.addRibbonIcon("message-square","AI Assistant",()=>{this.openAIAssistantView()})}async onunload(){console.log("Unloading AI Assistant plugin"),this.app.workspace.detachLeavesOfType(w)}async loadSettings(){this.settings=Object.assign({},x,await this.loadData())}async saveSettings(){await this.saveData(this.settings)}async openAIAssistantView(){let a=this.app.workspace.getLeavesOfType(w);if(a.length>0&&a[0]){this.app.workspace.revealLeaf(a[0]);return}let e=this.app.workspace.getRightLeaf(!1);e&&e.setViewState({type:w,active:!0})}getActiveAIView(){let a=this.app.workspace.getLeavesOfType(w);if(a.length>0){let e=a[0]?.view;if(e instanceof v)return e}return null}};
